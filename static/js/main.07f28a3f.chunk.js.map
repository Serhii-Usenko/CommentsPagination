{"version":3,"sources":["components/Pagination.js","components/ButtonTheme.js","App.js","index.js"],"names":["renderData","data","map","comm","index","className","body","Pagination","useState","setData","currentPage","setCurrPage","itemsPerPage","setItemsPerPage","pageNumberLimit","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","handleClick","e","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","number","onClick","useEffect","fetch","then","response","json","disabled","ButtonTheme","theme","setTheme","document","documentElement","type","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NAEMA,EAAa,SAACC,GAChB,OACI,8BACKA,EAAKC,KAAI,SAACC,EAAMC,GACb,OACI,oBAAIC,UAAU,WAAd,SAAsCF,EAAKG,MAAbF,SAOnC,SAASG,IAcpB,IAbA,MAAwBC,mBAAS,IAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAAmCD,mBAAS,GAA5C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAwCH,mBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEA,EAA8CL,mBAAS,GAAvD,mBAAOM,EAAP,KACA,GADA,KACoDN,mBAAS,IAA7D,mBAAOO,EAAP,KAA2BC,EAA3B,KACA,EAAoDR,mBAAS,GAA7D,mBAAOS,EAAP,KAA2BC,EAA3B,KAEMC,EAAc,SAACC,GACjBT,EAAYU,OAAOD,EAAEE,OAAOC,MAG1BC,EAAQ,GACNC,EAAE,EAAGA,GAAIC,KAAKC,KAAK1B,EAAK2B,OAAOhB,GAAea,IAClDD,EAAMK,KAAKJ,GAGf,IAAMK,EAAkBpB,EAAcE,EAChCmB,EAAmBD,EAAkBlB,EACrCoB,EAAe/B,EAAKgC,MAAMF,EAAkBD,GAE5CI,EAAoBV,EAAMtB,KAAI,SAAAiC,GAEhC,OAAIA,EAASpB,EAAqB,GAAKoB,EAASlB,EAExC,oBAEIM,GAAIY,EACJC,QAASjB,EACTd,UAAWK,GAAeyB,EAAS,SAAW,WAJlD,SAMKA,GALIA,GASN,QAIfE,qBAAU,WACNC,MAAM,iDACLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAM,SAACE,GAAD,OAAUhC,EAAQgC,QAC1B,IAwBH,OACI,gCACI,0CAGA,qBAAKpC,UAAU,iBAAf,SAAiCL,EAAWgC,KAC5C,qBAAK3B,UAAU,WAAW+B,QAVX,WACnBvB,EAAgBD,EAAe,IAS3B,SACI,iDAIJ,qBAAIP,UAAU,cAAd,UACI,wBACIA,UAAU,YACV+B,QA3BM,WAClBzB,EAAYD,EAAc,IAErBA,EAAc,GAAKI,IAAoB,IACxCE,EAAsBD,EAAqBD,GAC3CI,EAAsBD,EAAqBH,KAuBnC4B,SAAUhC,IAAgBc,EAAM,GAHpC,kBAOKU,EACL,wBAAQ7B,UAAU,YAAY+B,QA1CpB,WAClBzB,EAAYD,EAAc,GAEtBA,EAAc,EAAIK,IAClBC,EAAsBD,EAAqBD,GAC3CI,EAAsBD,EAAqBH,KAqCvC,wBCpGD,SAAS6B,IACpB,MAA0BnC,mBAAS,YAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KACA,EAA8BrC,mBAAS,aAAvC,6BAYA,OAJH6B,qBAAU,WACTS,SAASC,gBAAgB1C,UAAYuC,IACnC,CAACA,IAGG,qBAAKvC,UAAU,QAAf,SACI,wBAAQ2C,KAAK,SAASZ,QAZb,WAETS,EADG,aAAVD,EACgB,UACI,aASb,4BCHGK,MAVf,WAEC,OACC,gCACC,cAACN,EAAD,IACA,cAACpC,EAAD,QCLH2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,SAASO,eAAe,U","file":"static/js/main.07f28a3f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst renderData = (data) => {\r\n    return (\r\n        <div>\r\n            {data.map((comm, index) => {\r\n                return (\r\n                    <li className=\"comments\" key={index}>{comm.body}</li>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function Pagination() {\r\n    const [data, setData] = useState([]);\r\n    const [currentPage, setCurrPage] = useState(1);\r\n    const [itemsPerPage, setItemsPerPage] = useState(5);\r\n\r\n    const [pageNumberLimit, setPageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n    const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n\r\n    const handleClick = (e) => {\r\n        setCurrPage(Number(e.target.id));\r\n    }\r\n\r\n    const pages = [];\r\n    for(let i=1; i <=Math.ceil(data.length/itemsPerPage); i++){\r\n        pages.push(i);\r\n    }\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const renderPageNumbers = pages.map(number => {\r\n    \r\n        if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n            return (\r\n                <li\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={handleClick}\r\n                    className={currentPage == number ? 'active' : 'unActive'}\r\n                >\r\n                    {number}\r\n                </li>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/comments')\r\n        .then((response) => response.json())\r\n        .then ((json) => setData(json));\r\n    }, []);\r\n\r\n    const handleNextbtn = () => {\r\n        setCurrPage(currentPage + 1);\r\n\r\n        if (currentPage + 1 > maxPageNumberLimit) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        }\r\n    }\r\n\r\n    const handlePrevbtn = () => {\r\n        setCurrPage(currentPage - 1);\r\n\r\n        if ((currentPage - 1) % pageNumberLimit === 0) {\r\n            setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n            setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        }\r\n    }\r\n\r\n    const handleLoadMore = () => {\r\n        setItemsPerPage(itemsPerPage + 5);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Comments\r\n            </h1>\r\n            <div className=\"commentSection\">{renderData(currentItems)}</div>\r\n            <div className=\"loadMore\" onClick={handleLoadMore}>\r\n                <button>\r\n                    load more\r\n                </button>\r\n            </div>\r\n            <ul className=\"pageNumbers\">\r\n                <button\r\n                    className=\"buttonNav\"\r\n                    onClick={handlePrevbtn}\r\n                    disabled={currentPage === pages[0] ? true : false}\r\n                >\r\n                    Prev\r\n                </button>\r\n                    {renderPageNumbers}\r\n                <button className=\"buttonNav\" onClick={handleNextbtn}>\r\n                    Next\r\n                </button>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function ButtonTheme() {\r\n    const [theme, setTheme] = useState('lightMod');\r\n    const [btnName, setBtnName] = useState('Light Mod');\r\n\r\n\tconst toggleTheme = () => {\r\n\t\tif(theme === 'lightMod') {\r\n            setTheme('darkMod') \r\n        } else {setTheme('lightMod')}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.documentElement.className = theme\r\n\t}, [theme]);\r\n\r\n    return (\r\n        <div className=\"theme\">\r\n            <button type=\"button\" onClick={toggleTheme}>\r\n                Change theme\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Pagination from './components/Pagination';\nimport ButtonTheme from './components/ButtonTheme';\n\nfunction App() {\n\n\treturn (\n\t\t<div>\n\t\t\t<ButtonTheme />\n\t\t\t<Pagination />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}